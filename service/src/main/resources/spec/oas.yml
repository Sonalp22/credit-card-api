openapi: 3.0.0
info:
  version: 1.0.0
  title: customer-credit-card-data
  description: |
    This API is used to maintain and search credit card related data for one or more customer datasets
  contact:
    name: xxx
    email: sp@g.com
  x-release-notes: |
    CDT Release Date: 2021-05-12
    Added
        Initial set of endpoints for Credit card api to perform CRUD operations
  x-proxy-name: credit-card-data
  x-availability-status: Development
  x-oas-href: https://github.com/Sonalp22/credit-card-api/oas.yml
  x-docs-href: https://xxx
  x-business-owner-email: xxx
  x-product-owner-email: xxx
  x-technical-owner-email: xxx
  x-platform: xxx
  x-published-for: public
  x-layer: xxx
  x-supply-chain-area: xxx
  x-support-l1: xxx
  x-support-l2: xxx
  x-support-l3: xxx
  x-category: xxx
  x-data-currency: 0
  x-back-end-systems: xxx
  x-api-platform: xxx
  x-visibility: internal
  x-brand: xxx

security:
  - Oauth2User: [InternalUser]
tags:
  - name: Credit Card Data
    description: Rest api for managing credit card related data for one or more customer datasets
paths:
  /card-detail/add:
    post:
      operationId: storeCardDetails
      tags:
        - Customer Credit Card
      summary: Store Credit Card details for a given customer
      description: This method stores credit card information for based on provided inputs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDetail'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDetail'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: The user is not authenticated in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: The user does not have permissions to access this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Bad URL or no data has been found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false

  /card-details:
    get:
      operationId: getCardDetails
      tags:
        - Collection Details
      summary: Fetches Card Details available in database for all customers
      description: This method fetches all card details in the system
      parameters:
        - name: page
          in: query
          description: |
            This can be number of the page being request
          required: false
          schema:
            type: string
            default: 1
            minimum: 1
            example: 15
        - name: limit
          in: query
          description: |
            Specifies the number of data sets to be sent in a page
          required: false
          schema:
            type: integer
            minimum: 10
            default: 10
            maximum: 50
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDetails'
          headers:
            First-Page:
              $ref: '#/components/headers/FirstPage'
            Previous-Page:
              $ref: '#/components/headers/PreviousPage'
            Current-Page:
              $ref: '#/components/headers/CurrentPage'
            Next-Page:
              $ref: '#/components/headers/NextPage'
            Last-Page:
              $ref: '#/components/headers/LastPage'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: The user is not authenticated in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: The user does not have permissions to access this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Bad URL or no rule Id has been found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
components:
  headers:
    FirstPage:
      description: |
        Page reference representing the first page of data in the data set.
      schema:
        type: string
        example: 1
      required: true
    PreviousPage:
      description: |
        Page reference representing the previous page of data
      schema:
        type: string
        example: 14
      required: false
    CurrentPage:
      description: Page reference representing the current page of data
      schema:
        type: string
        example: 15
      required: true
    NextPage:
      description: |
        Page reference representing the next page of data if not all items have been returned.
        To fetch the next page of data the 'page' query request parameter should be set to this value.
      schema:
        type: string
        example: 16
      required: false
    LastPage:
      description: |
        Page reference representing the last page of data in the data set
      schema:
        type: string
        example: 25
      required: true
  schemas:
    ApiError:
      type: object
      properties:
        method:
          description: 'The request method type e.g. GET, POST.'
          type: string
        requestUri:
          description: The request URI.
          type: string
          example: '/'
        status:
          description: The textual representation of the response status.
          type: string
        timestamp:
          description: 'The date and time (dd-MM-yyyy hh:mm:ss) the error occured.'
          type: string
          example: '2020-08-16T12:39:53.089Z'
        message:
          description: High level error message.
          type: string
        debugMessage:
          description: Detailed error message.
          type: string
        subErrors:
          description: The list of invalid fields in the request.
          type: array
          items:
            $ref: '#/components/schemas/ApiValidationError'

    ApiValidationError:
      type: object
      properties:
        field:
          description: The field that has failed validation.
          type: string
        rejectedValue:
          description: The value that has failed validation.
          type: string
        message:
          description: The reason and advice for failed validation.
          type: string



    CardDetail:
      required:
        - customerName
        - cardNumber
      type: object
      properties:
        customerName:
          type: string
          description: customer name
          example: '10000007951'
        cardNumber:
          type: string
          description: card number
          pattern: ^[0-9]{19}$
          example: '10000007951'
        limit:
          type: number
          description: card limit
          example: '2000'
        balance:
          type: number
          description: card balance
          example: '2300'
        createdDateTime:
          type: string
          format: date-time

    CardDetails:
      properties:
        cardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetail'

  securitySchemes:
    Oauth2User:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: xxx
          tokenUrl: xxx
          scopes:
            #InternalUser role is specific to search endpoint
            InternalUser.readonly: Internal User scope
